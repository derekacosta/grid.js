{"ast":null,"code":"import _defineProperty from \"/Users/standarduser/Documents/CompSci/Personals/grid.js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/standarduser/Documents/CompSci/Personals/grid.js/src/Grid/Cell.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\n\nconst Cell = props => {\n  const col = props.col,\n        cellHeight = props.cellHeight,\n        cellWidth = props.cellWidth,\n        isWall = props.isWall,\n        onMouseDown = props.onMouseDown,\n        onMouseEnter = props.onMouseEnter,\n        onMouseUp = props.onMouseUp,\n        row = props.row,\n        mousePressed = props.mousePressed;\n  const style = {\n    width: cellWidth ? cellWidth + \"px\" : \"25px\",\n    height: cellHeight ? cellHeight + \"px\" : \"25px\",\n    outline: \".1px solid rgb(175, 216, 248)\",\n    border: \".1px solid rgb(175, 216, 248)\",\n    display: \"inline-block\" // overflow: \"hidden\"\n\n  };\n  return React.createElement(\"path\", {\n    // fill=\"\"\n    \"stroke-linecap\": \"round\",\n    \"stroke-miterlimit\": \"10\",\n    stroke: \"#000\",\n    \"stroke-width\": \"15\",\n    id: \"node-\".concat(row, \"-\").concat(col) // className={`node ${extraClassName}`}\n    ,\n    onMouseDown: () => onMouseDown(row, col),\n    onMouseEnter: () => onMouseEnter(row, col),\n    onMouseUp: () => onMouseUp(),\n    style: isWall ? _objectSpread({\n      backgroundColor: \"rgb(12, 53, 71)\"\n    }, style) : style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};\n\nexport default Cell;","map":{"version":3,"sources":["/Users/standarduser/Documents/CompSci/Personals/grid.js/src/Grid/Cell.tsx"],"names":["React","Cell","props","col","cellHeight","cellWidth","isWall","onMouseDown","onMouseEnter","onMouseUp","row","mousePressed","style","width","height","outline","border","display","backgroundColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;;AAeA,MAAMC,IAAqB,GAAIC,KAAD,IAAgB;AAAA,QAE1CC,GAF0C,GAWxCD,KAXwC,CAE1CC,GAF0C;AAAA,QAG1CC,UAH0C,GAWxCF,KAXwC,CAG1CE,UAH0C;AAAA,QAI1CC,SAJ0C,GAWxCH,KAXwC,CAI1CG,SAJ0C;AAAA,QAK1CC,MAL0C,GAWxCJ,KAXwC,CAK1CI,MAL0C;AAAA,QAM1CC,WAN0C,GAWxCL,KAXwC,CAM1CK,WAN0C;AAAA,QAO1CC,YAP0C,GAWxCN,KAXwC,CAO1CM,YAP0C;AAAA,QAQ1CC,SAR0C,GAWxCP,KAXwC,CAQ1CO,SAR0C;AAAA,QAS1CC,GAT0C,GAWxCR,KAXwC,CAS1CQ,GAT0C;AAAA,QAU1CC,YAV0C,GAWxCT,KAXwC,CAU1CS,YAV0C;AAa5C,QAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAER,SAAS,GAAGA,SAAS,GAAG,IAAf,GAAsB,MAD1B;AAEZS,IAAAA,MAAM,EAAEV,UAAU,GAAGA,UAAU,GAAG,IAAhB,GAAuB,MAF7B;AAGZW,IAAAA,OAAO,EAAE,+BAHG;AAIZC,IAAAA,MAAM,EAAE,+BAJI;AAKZC,IAAAA,OAAO,EAAE,cALG,CAMZ;;AANY,GAAd;AASA,SACE;AACE;AACA,sBAAe,OAFjB;AAGE,yBAAkB,IAHpB;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,oBAAa,IALf;AAME,IAAA,EAAE,iBAAUP,GAAV,cAAiBP,GAAjB,CANJ,CAOE;AAPF;AAQE,IAAA,WAAW,EAAE,MAAMI,WAAW,CAACG,GAAD,EAAMP,GAAN,CARhC;AASE,IAAA,YAAY,EAAE,MAAMK,YAAY,CAACE,GAAD,EAAMP,GAAN,CATlC;AAUE,IAAA,SAAS,EAAE,MAAMM,SAAS,EAV5B;AAWE,IAAA,KAAK,EACHH,MAAM;AAEAY,MAAAA,eAAe,EAAE;AAFjB,OAGGN,KAHH,IAKFA,KAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsBD,CA5CD;;AA8CA,eAAeX,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\ninterface Props {\n  col: any;\n  cellHeight: any;\n  cellWidth: any;\n  key: any;\n  row: any;\n  isWall: any;\n  onMouseDown: any;\n  onMouseEnter: any;\n  onMouseUp: any;\n  mousePressed: any;\n}\n\nconst Cell: React.FC<Props> = (props: any) => {\n  const {\n    col,\n    cellHeight,\n    cellWidth,\n    isWall,\n    onMouseDown,\n    onMouseEnter,\n    onMouseUp,\n    row,\n    mousePressed\n  } = props;\n\n  const style = {\n    width: cellWidth ? cellWidth + \"px\" : \"25px\",\n    height: cellHeight ? cellHeight + \"px\" : \"25px\",\n    outline: \".1px solid rgb(175, 216, 248)\",\n    border: \".1px solid rgb(175, 216, 248)\",\n    display: \"inline-block\"\n    // overflow: \"hidden\"\n  };\n\n  return (\n    <path\n      // fill=\"\"\n      stroke-linecap=\"round\"\n      stroke-miterlimit=\"10\"\n      stroke=\"#000\"\n      stroke-width=\"15\"\n      id={`node-${row}-${col}`}\n      // className={`node ${extraClassName}`}\n      onMouseDown={() => onMouseDown(row, col)}\n      onMouseEnter={() => onMouseEnter(row, col)}\n      onMouseUp={() => onMouseUp()}\n      style={\n        isWall\n          ? {\n              backgroundColor: \"rgb(12, 53, 71)\",\n              ...style\n            }\n          : style\n      }\n    ></path>\n  );\n};\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}