{"ast":null,"code":"import _defineProperty from\"/Users/standarduser/Documents/CompSci/Personals/grid.js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/standarduser/Documents/CompSci/Personals/grid.js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useEffect}from\"react\";import Cell from\"./Cell\";var Grid=function Grid(props){var col=props.col,row=props.row,cellHeight=props.cellHeight,cellWidth=props.cellWidth;var _useState=useState(),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),mousePressed=_useState4[0],setMousePressed=_useState4[1];useEffect(function(){setGrid(getInitialGrid(col,row));},[col,row]);var handleMouseDown=function handleMouseDown(row,col){setGrid(RefreshGrid(grid,row,col));setMousePressed(true);};var handleMouseEnter=function handleMouseEnter(row,col){if(!mousePressed)return;setGrid(RefreshGrid(grid,row,col));};var handleMouseUp=function handleMouseUp(){setMousePressed(false);};return React.createElement(\"table\",{style:{height:\"50%\",margin:\"0 auto\",display:\"inline-block\",borderCollapse:\"collapse\",tableLayout:\"fixed\"}},React.createElement(\"tbody\",null,grid&&grid.map(function(row,rowIdx){return React.createElement(\"tr\",{key:rowIdx},row.map(function(node,nodeIdx){var row=node.row,col=node.col,isWall=node.isWall;return React.createElement(Cell,{cellHeight:cellHeight,cellWidth:cellWidth,key:nodeIdx,col:col,row:row,isWall:isWall,mousePressed:mousePressed,onMouseDown:function onMouseDown(col,row){return handleMouseDown(row,col);},onMouseEnter:function onMouseEnter(col,row){return handleMouseEnter(row,col);},onMouseUp:function onMouseUp(col,row){return handleMouseUp();}});}));})));};var getInitialGrid=function getInitialGrid(col,row){var grid=[];for(var i=0;i<row;i++){var currentRow=[];for(var j=0;j<col;j++){currentRow.push(createNode(i,j));}grid.push(currentRow);}return grid;};var createNode=function createNode(col,row){return{col:col,row:row,// isStart: row === START_NODE_ROW && col === START_NODE_COL,\n// isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\ndistance:Infinity,isVisited:false,isWall:false,previousNode:null};};var RefreshGrid=function RefreshGrid(grid,row,col){var newGrid=grid.slice(0);var node=grid[row][col];var newNode=_objectSpread({},node,{isWall:!node.isWall});newGrid[row][col]=newNode;return newGrid;};export default Grid;","map":{"version":3,"sources":["/Users/standarduser/Documents/CompSci/Personals/grid.js/src/Grid/Grid.tsx"],"names":["React","useState","useEffect","Cell","Grid","props","col","row","cellHeight","cellWidth","grid","setGrid","mousePressed","setMousePressed","getInitialGrid","handleMouseDown","RefreshGrid","handleMouseEnter","handleMouseUp","height","margin","display","borderCollapse","tableLayout","map","rowIdx","node","nodeIdx","isWall","i","currentRow","j","push","createNode","distance","Infinity","isVisited","previousNode","newGrid","slice","newNode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { arrayOf, bool, func, number, shape, string } from \"prop-types\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Cell from \"./Cell\";\n\ninterface Props {\n  col: Number;\n  row: Number;\n  cellHeight: Number;\n  cellWidth: Number;\n}\n\nconst Grid: React.FC<Props> = props => {\n  const { col, row, cellHeight, cellWidth } = props;\n\n  const [grid, setGrid] = useState();\n\n  const [mousePressed, setMousePressed] = useState(false);\n  useEffect(() => {\n    setGrid(getInitialGrid(col, row));\n  }, [col, row]);\n\n  const handleMouseDown = (row: any, col: any) => {\n    setGrid(RefreshGrid(grid, row, col));\n    setMousePressed(true);\n  };\n\n  const handleMouseEnter = (row: any, col: any) => {\n    if (!mousePressed) return;\n    setGrid(RefreshGrid(grid, row, col));\n  };\n\n  const handleMouseUp = () => {\n    setMousePressed(false);\n  };\n\n  return (\n      <table\n        style={{\n          height: \"50%\",\n          margin: \"0 auto\",\n          display: \"inline-block\",\n          borderCollapse: \"collapse\",\n          tableLayout: \"fixed\"\n        }}\n      >\n        <tbody>\n          {grid &&\n            grid.map((row: any, rowIdx: any) => (\n              <tr key={rowIdx}>\n                {row.map((node: any, nodeIdx: any) => {\n                  const { row, col, isWall } = node;\n                  return (\n                    <Cell\n                      cellHeight={cellHeight}\n                      cellWidth={cellWidth}\n                      key={nodeIdx}\n                      col={col}\n                      row={row}\n                      isWall={isWall}\n                      mousePressed={mousePressed}\n                      onMouseDown={(col: any, row: any) =>\n                        handleMouseDown(row, col)\n                      }\n                      onMouseEnter={(col: any, row: any) =>\n                        handleMouseEnter(row, col)\n                      }\n                      onMouseUp={(col: any, row: any) => handleMouseUp()}\n                    />\n                  );\n                })}\n              </tr>\n            ))}\n        </tbody>\n      </table>\n  );\n};\n\nconst getInitialGrid = (col: any, row: any) => {\n  const grid = [];\n  for (let i = 0; i < row; i++) {\n    const currentRow = [];\n    for (let j = 0; j < col; j++) {\n      currentRow.push(createNode(i, j));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\n\nconst createNode = (col: any, row: any) => {\n  return {\n    col,\n    row,\n    // isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    // isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null\n  };\n};\n\nconst RefreshGrid = (grid: any, row: any, col: any) => {\n  const newGrid = grid.slice(0);\n  const node = grid[row][col];\n  const newNode = {\n    ...node,\n    isWall: !node.isWall\n  };\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}